CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));
CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");
CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");
CREATE TABLE IF NOT EXISTS "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "cache_locks" ("key" varchar not null, "owner" varchar not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE INDEX "jobs_queue_index" on "jobs" ("queue");
CREATE TABLE IF NOT EXISTS "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "login_attempts" ("id" integer primary key autoincrement not null, "user_id" integer, "email" varchar, "ip" varchar, "user_agent" text, "success" tinyint(1) not null default '0', "created_at" datetime not null default CURRENT_TIMESTAMP, foreign key("user_id") references "users"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "school_classes" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "name" varchar not null, "level_id" integer, "subject_id" integer not null, "description" text);
CREATE TABLE IF NOT EXISTS "categories" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "icon" text, "name" varchar not null);
CREATE TABLE IF NOT EXISTS "materials" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "title" varchar not null, "category_id" integer, "subcategory_id" integer, "path" varchar, "url" varchar, "mime" varchar, "size" integer, "user_id" integer, "slug" varchar);
CREATE TABLE IF NOT EXISTS "activity_logs" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "action" varchar, "description" text, "causer_id" integer, "ip_address" varchar);
CREATE TABLE IF NOT EXISTS "login_logs" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "email" varchar not null, "ip_address" varchar, "user_agent" text);
CREATE TABLE IF NOT EXISTS "notes" ("id" integer primary key autoincrement not null, "created_at" datetime, "updated_at" datetime, "title" varchar not null, "body" text, "subject_id" integer, "user_id" integer, "level_id" integer, "class_id" integer, "file_path" varchar, "original_name" varchar, "mime_type" varchar, "file_size" integer, foreign key("user_id") references "users"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "levels" ("id" integer primary key autoincrement not null, "name" varchar not null, "icon" varchar, "description" text, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "subjects" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" text, "icon" text, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "school_classes_subject_id_index" on "school_classes" ("subject_id");
CREATE TABLE IF NOT EXISTS "subcategories" ("id" integer primary key autoincrement not null, "name" varchar not null, "category_id" integer not null, "created_at" datetime, "updated_at" datetime, "icon" text, "year" integer);
CREATE INDEX "subcategories_category_id_index" on "subcategories" ("category_id");
CREATE INDEX "materials_category_id_index" on "materials" ("category_id");
CREATE INDEX "materials_subcategory_id_index" on "materials" ("subcategory_id");
CREATE INDEX "materials_user_id_index" on "materials" ("user_id");
CREATE TABLE IF NOT EXISTS "mobile_notifications" ("id" integer primary key autoincrement not null, "title" varchar not null, "message" text not null, "deep_link" varchar, "scheduled_at" datetime, "repeat" varchar check ("repeat" in ('none', 'hourly', 'daily', 'weekly', 'monthly')) not null default 'none', "status" varchar check ("status" in ('queued', 'scheduled', 'sending', 'sent', 'failed', 'canceled')) not null default 'queued', "sent_at" datetime, "delivered_count" integer not null default '0', "opened_count" integer not null default '0', "clicked_count" integer not null default '0', "targets" text, "meta" text, "error" text, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "mobile_notifications_scheduled_at_index" on "mobile_notifications" ("scheduled_at");
CREATE INDEX "mobile_notifications_status_index" on "mobile_notifications" ("status");
CREATE TABLE IF NOT EXISTS "maintenance_events" ("id" integer primary key autoincrement not null, "is_enabled" tinyint(1) not null default '0', "message" text, "started_at" datetime, "ended_at" datetime, "user_id" integer, "meta" text, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "mobile_app_settings" ("id" integer primary key autoincrement not null, "app_icon_path" varchar, "splash_image_path" varchar, "splash_headline" varchar, "splash_subtext" varchar, "show_notifications" tinyint(1) not null default '1', "app_update_required" tinyint(1) not null default '0', "app_update_version" varchar, "app_update_notes" text, "google_callback_url" varchar, "premium_enabled" tinyint(1) not null default '0', "premium_provider" varchar, "premium_price" numeric, "premium_currency" varchar, "premium_features" text, "meta" text, "created_at" datetime, "updated_at" datetime, "app_update_force_after" datetime, "selcom_merchant_id" varchar, "selcom_api_key" varchar, "selcom_env" varchar, "selcom_callback_url" varchar);
CREATE TABLE IF NOT EXISTS "admin_settings" ("id" integer primary key autoincrement not null, "site_name" varchar, "site_url" varchar, "site_icon_path" varchar, "favicon_path" varchar, "contact_email" varchar, "footer_text" varchar, "meta" text, "created_at" datetime, "updated_at" datetime, "mail_host" varchar, "mail_port" integer, "mail_username" varchar, "mail_password" varchar, "mail_encryption" varchar, "mail_from_address" varchar, "mail_from_name" varchar);
CREATE TABLE IF NOT EXISTS "regions" ("id" integer primary key autoincrement not null, "name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "regions_name_unique" on "regions" ("name");
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "role" varchar not null default ('user'), "banned_at" datetime, "phone" varchar, "region_id" integer, foreign key("region_id") references "regions"("id") on delete set null);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE INDEX "users_role_index" on "users" ("role");
CREATE TABLE IF NOT EXISTS "feedbacks" ("id" integer primary key autoincrement not null, "user_id" integer not null, "from_user_id" integer, "subject" varchar, "message" text not null, "rating" integer, "status" varchar not null default 'new', "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("from_user_id") references "users"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "school_class_subject" ("id" integer primary key autoincrement not null, "school_class_id" integer not null, "subject_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("school_class_id") references "school_classes"("id") on delete cascade, foreign key("subject_id") references "subjects"("id") on delete cascade);
CREATE UNIQUE INDEX "school_class_subject_school_class_id_subject_id_unique" on "school_class_subject" ("school_class_id", "subject_id");
CREATE UNIQUE INDEX "materials_slug_unique" on "materials" ("slug");
CREATE UNIQUE INDEX "categories_name_unique" on "categories" ("name");
CREATE INDEX "subcategories_year_index" on "subcategories" ("year");
